//1
-- Creating new database called university
create database university;
use university;
-- Creating new table called students
create table students(
   id int primary key,
    name varchar(100) not null,
    age int not null,
    department varchar(10) not null,
    city varchar(30) not null
);
-- insert data in the students table
INSERT INTO students (id, name, age, department, city)
VALUES
(200616, 'rakib', 24, 'ICE', 'Pabna'),
(200617, 'sabuz', 23, 'ICE', 'Dhaka'),
(200618, 'sumona', 23, 'ICE', 'Naogoan');

-- to view the table
select * from students;
-- update the students table
update students set age=25 where id=200618;
select * from students;
-- delete a row from the students table
delete from students where id=200618;
select * from students;
-- delete table
drop table students;
-- delete database
drop database university;


//2
use university;
-- create new table called employe
create table employe(
    id int primary key,
    name varchar(100) not null
);
insert into employe values(101, 'abir');
insert into employe values(102, 'ahsan');
select * from employe;
-- add new column in the employe table
alter table employe
      add phone varchar(20);
insert into employe values(103, 'yasin', '0123456789');
select * from employe;
-- delete table
drop table employe;

//3
use University;
create table dept(
   Dept_name varchar(20),
   Building varchar(20),
   Budget numeric(12,2),
   primary key(Dept_name)
);
insert into dept 
(Dept_name,Building,Budget)
values 
('ICE','Engineering building','90000'),
('CSE','Engineering building','80000'),
('EEE','Engineering building','90500'),
('Physics','Science building','50500');

select * from dept;
select Building from dept;
select Dept_name from dept where Building='Engineering building';

//4
----create alter and drop
create database uinversity
use university
create table instructor(
	ID varchar(20),
	name varchar(20) not null,
	dept_name varchar(20),
	salary numeric(8,2),
	primary key(ID)
);
insert into instructor  values ('10101','Srinivasan','Comp.Sci',65000);
insert into instructor  values ('12121','Wu','Finance',90000);
insert into instructor values ('15151','Mozart','Music',40000);
insert into instructor  values ('22222','Einstein','Physics',95000);
insert into instructor values ('32343','EI Said','History',60000);
insert into instructor values ('33456','Gold','Physics',87000);
select * from instructor
select dept_name from instructor
---group by
select name from instructor group by name;
select dept_name,avg(salary) as avg_salary from instructor group by dept_name
select dept_name,count(*) from instructor group by dept_name
select * from instructor
---having clause
select dept_name,avg(salary) as avg_salary from instructor group by dept_name having avg(salary)>55000;
----order by clause
select * from instructor order by salary asc,name desc;
---view
create view faculty as 
select ID,name,dept_name from instructor
select*from instructor
----index
create index dept_inx on instructor(dept_name)
---procedure
create procedure instruct_proc
AS
BEGIN
select name as authors_name from instructor where ID = '15151'
END
exec instruct_proc

//5
use university; 
create table instruct( 
    ID varchar(20) primary key, 
    name varchar(20) not null, 
    dept_name varchar(20), 
  
    salary numeric(8,2) 
); 
insert into instruct 
values 
('10101','Srinivasan','CSE',65000), 
('12121','Wu','Finance',90000), 
('15151','Mozart','Music',40000), 
('22222','Einstein','Physics',95000), 
('32343','EI Said','History',60000), 
('33456','Gold','Physics',87000); 
select * from instruct; 
create table DEPARTMENT( 
    dept_name varchar(20) primary key, 
    Building_name varchar(20), 
    Budget numeric(12,2) 
); 
insert into DEPARTMENT  
(dept_name,Building_name,Budget) values  
('ICE','Engineering building','90000'), 
('CSE','Engineering building','80000'), 
('EEE','Engineering building','90500'), 
('Physics','Science building','50500'), 
('Social Work','Arts building','30500'); 
select * from DEPARTMENT; 
-- cartesian product 
select Building_name,salary from DEPARTMENT,instruct where 
DEPARTMENT.dept_name=instruct.dept_name; 
-- join operation 
select ID,name,budget from DEPARTMENT join instruct on 
DEPARTMENT.dept_name=instruct.dept_name; 
-- left outer join 
  
select * from DEPARTMENT left outer join instruct on 
DEPARTMENT.dept_name=instruct.dept_name; 
-- right outer join 
select * from DEPARTMENT right outer join instruct on 
DEPARTMENT.dept_name=instruct.dept_name; 
-- full outer join 
select * from DEPARTMENT left join instruct on 
DEPARTMENT.dept_name=instruct.dept_name 
union 
select * from DEPARTMENT right join instruct on 
DEPARTMENT.dept_name=instruct.dept_name;

//6
use university; 
select * from instruct; 
-- count 
select count(ID) as cnt_ID from instruct where dept_name='Physics'; 
-- max 
select max(salary) as maxSalary from instruct; 
-- min 
select min(salary) as minSalary from instruct; 
  
-- avg 
select avg(salary) as avg_salary from instruct; 

//7
--Create Database
create database university_190609
use university_190609

GO
--customers Table Creating Start
CREATE TABLE customers
(
cusl_id CHAR (6) PRIMARY KEY CHECK (cusl_id LIKE '[A-Z][0-9][0-9][0-9][0-9][0-9]'),
cusl_fname CHAR(15) NOT NULL,
cusl_lname VARCHAR (15),
cusl_address TEXT,
cusl_telno CHAR (20) CHECK (cusl_telno LIKE '+88[0-9][0-9][0-9]-[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]'),
cusl_city CHAR (22) DEFAULT 'Lalmonirhat',
sales_amnt MONEY CHECK (sales_amnt>=0),
proc_amnt MONEY CHECK (proc_amnt>=0)
);

--customers Table Insert Start
insert into customers
(cusl_id,cusl_fname,cusl_lname,cusl_address,cusl_telno,cusl_city,sales_amnt,proc_amnt) VALUES
('P00002','RAHATUL','RABBI','221/B Dhanmondi','+88017-00000000','Dhaka',0,0);

insert into customers VALUES
('C00005','IMRAN','Hossain','221/B Dhanmondi','+88017-00000000','Dhaka',0,0);

--customers Table Display Start
select * from customers;

--customers Table value Delete Start
delete from customers;

--customers Table Delete Start
DROP TABLE customers2;

--CustomerAndSuppliers Table Creating Start
CREATE TABLE CustomerAndSuppliers
(
cusl_id CHAR (6) PRIMARY KEY CHECK (cusl_id LIKE '[CS][0-9][0-9][0-9][0-9][0-9]'),
cusl_fname CHAR(15) NOT NULL,
cusl_lname VARCHAR (15),
cusl_address TEXT,
cusl_telno CHAR (12) CHECK (cusl_telno LIKE '[0-9][0-9][0-9]-[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]'),
cusl_city CHAR (17) DEFAULT 'Lalmonirhat',
sales_amnt MONEY CHECK (sales_amnt>=0),
proc_amnt MONEY CHECK (proc_amnt>=0)
);

--CustomerAndSuppliers Table Insert Start
insert into CustomerAndSuppliers
(cusl_id,cusl_fname,cusl_lname,cusl_address,cusl_telno,cusl_city,sales_amnt,proc_amnt) VALUES
('C00001','Iqbal','Hossain','221/B Dhanmondi','017-00000000','Dhaka',0,0);

insert into CustomerAndSuppliers
(cusl_id,cusl_fname,cusl_lname,cusl_address,cusl_telno,cusl_city,sales_amnt,proc_amnt) VALUES
('C00002','RAHAT','KABIR','221/B Dhanmondi','017-00000000','Dhaka',0,0);


--CustomerAndSuppliers Table Display Start
SELECT * from CustomerAndSuppliers;

--CustomerAndSuppliers Table value Delete Start
delete from CustomerAndSuppliers;

--CustomerAndSuppliers Table Delete Start
DROP TABLE CustomerAndSuppliers;



--Items Table Creating Start
CREATE TABLE Items
(
item_id CHAR (6) PRIMARY KEY CHECK (item_id LIKE '[P][0-9][0-9][0-9][0-9][0-9]'),
item_name CHAR(12) NOT NULL,
item_category VARCHAR (10),
item_price FLOAT(12) check(item_price>=0),
item_qoh INT CHECK (item_qoh>=0),
item_last_sold DATE DEFAULT getdate(),
);

---set message usign triggering
create trigger trg_test on Items for insert 
as 
 begin
 print ('one item insert into item table');
end
--Items Table Inserting Start

insert into Items
(item_id,item_name,item_category,item_price,item_qoh) VALUES
('P00005','RAHATUL','STUDENT','5241.2','45');

insert into Items
(item_id,item_name,item_category,item_price,item_qoh) VALUES
('P00002','RAHATUL','STUDENT','5241.2','45');
--Items Table Display Start
SELECT * from Items;

--Items Table value Delete Start
delete from Items;

--Item Table Delete Start
DROP TABLE Items;




--Transactions Table Creating Start
CREATE TABLE Transactions
(
tran_id CHAR (10) PRIMARY KEY CHECK (tran_id LIKE '[T][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]'),
item_id CHAR(6) FOREIGN KEY(item_id) REFERENCES Items(item_id),
cusl_id CHAR (6) FOREIGN KEY(cusl_id) REFERENCES CustomerAndSuppliers(cusl_id),
tran_type CHAR(1),
tran_quantity INT CHECK (tran_quantity>=0),
tran_date DATETIME DEFAULT getdate(),
);

--Transactions Table Delete Start
DROP TABLE Transactions;


--create trigger
create trigger test on Transactions for insert
as
begin
DECLARE @item_id char(6), @tranamount int, @tran_type char(1),@cusld_id char(6),@price money
SELECT @item_id=item_id, @tranamount=tran_quantity, @tran_type=tran_type,@cusld_id =cusl_id FROM INSERTED
Select @price=item_price from items where item_id=@item_id
 IF (@tran_type ='S')
     begin
       UPDATE Items SET item_qoh=item_qoh- @tranamount WHERE item_id=@item_id 
       update  CustomerAndSuppliers set sales_amnt=sales_amnt+@price*@tranamount where cusl_id=@cusld_id
     end
 ELSE
   begin
    UPDATE Items SET item_qoh=item_qoh+ @tranamount WHERE item_id=@item_id
    update  CustomerAndSuppliers set proc_amnt=proc_amnt+@tranamount*@price where cusl_id=@cusld_id
    end
end

--delete triggering
drop  TRIGGER test

--Transactions Table Inserting Start
insert into Transactions
(tran_id,item_id,cusl_id,tran_type,tran_quantity) VALUES
('T000052149','P00005','C00001','S',12);

insert into Transactions
(tran_id,item_id,cusl_id,tran_type,tran_quantity) VALUES
('T000052142','P00002','C00002','O',12);
--Transactions Table Display Start


--Triggering Table value test Start
select * from Transactions;
select * from Items;
--CustomerAndSuppliers Table Display Start
SELECT * from CustomerAndSuppliers;

delete from Transactions;

--show the trigger name  command
--select * from sys.triggers
--SELECT *  FROM sys.procedures

//8

<?php
$base = mysqli_connect('localhost', 'root', '', 'insert');
if(isset($_POST['submit'])){ 
    $name = $_POST['name'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $sql = "INSERT INTO insertform(name, email, password) VALUES ('$name', '$email', '$password')"; 
    if(mysqli_query($base, $sql)){ 
        echo "Inserted successfully";
    }
    else{
        echo "Insertion failed: " . mysqli_error($base); // Added error message for debugging
    }
}

mysqli_close($base); // Close the connection after use
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>indert form</title>
    <style>
        body{
            background-color: antiquewhite;
            font-family: Arial, Helvetica, sans-serif;
        }
        h1{
            text-align: center;
        }
       
        label {
            font-weight: bold; 
            margin-bottom: 5px; 
            
        }

        input {
            width: 100%; 
            padding: 8px; 
            margin-bottom: 10px; 
            border-radius: 8px; 
            border-color: green;
        }
        input[type="submit"] {
            background-color: blueviolet; 
            color: white; 
            cursor: pointer; 
            padding: 5px 5px; 
            margin: 0 auto; 
            display: block; 
            
        }
    </style>
</head>
<body>
    <h1>Personal Details</h1>
  
    <form action="insert.php" method="POST">
        
        <label for="name">First Name : </label>
        <input type="text" id="name" name="name" placeholder="Enter your name"><br>
        <label for="email">Email : </label>
        <input type="email" id="email" name="email" placeholder="Enter valid email "><br>
        <label for="passward">Passward : </label>
        <input type="password" id="password" name="password" placeholder="Enter 6 digit password"><br>
        <input type="submit" name="submit" value="submit">
    </form>
</body>
</html>
